{
    "sourceFile": "src/utils/pdfGenerator.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1757096381422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1757096381422,
            "name": "Commit-0",
            "content": "import jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { RegistroProdutividade } from '@/hooks/useRegistros';\n\ninterface UserProfile {\n  nome: string;\n  login: string;\n  matricula?: string;\n}\n\nexport function generateProductivityReport(\n  registro: RegistroProdutividade,\n  userProfile: UserProfile\n) {\n  const doc = new jsPDF();\n  const pageWidth = doc.internal.pageSize.width;\n  \n  // Configurar fonte\n  doc.setFont('helvetica');\n  \n  // Cabeçalho - Nome da Prefeitura\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'bold');\n  doc.text('PREFEITURA MUNICIPAL DE NOVA CRUZ', pageWidth / 2, 20, { align: 'center' });\n  doc.text('SECRETARIA MUNICIPAL DE TRIBUTAÇÃO E ARRECADAÇÃO', pageWidth / 2, 28, { align: 'center' });\n  \n  // Título do Relatório\n  doc.setFontSize(14);\n  doc.text('RELATÓRIO DE PRODUTIVIDADE', pageWidth / 2, 40, { align: 'center' });\n  \n  // Linha separadora\n  doc.setLineWidth(0.5);\n  doc.line(20, 45, pageWidth - 20, 45);\n  \n  // Informações do Fiscal\n  doc.setFontSize(10);\n  doc.setFont('helvetica', 'normal');\n  doc.text(`Fiscal: ${userProfile.nome}`, 20, 55);\n  doc.text(`Matrícula: ${userProfile.matricula || userProfile.login}`, 20, 62);\n  \n  // Informações da Competência e Data\n  const dataEmissao = format(new Date(), 'dd/MMM/yyyy', { locale: ptBR });\n  doc.text(`Competência: ${registro.competencia}`, pageWidth - 80, 55);\n  doc.text(`Data de emissão: ${dataEmissao}`, pageWidth - 80, 62);\n  \n  // Preparar dados da tabela\n  const tableData = registro.itens_servico?.map((item, index) => [\n    index + 1, // No. Item\n    item.id_documento,\n    item.servico?.descricao || 'Serviço não encontrado',\n    item.quantidade || 1,\n    item.qtd_fiscais,\n    item.pontuacao_calculada.toFixed(2),\n    item.pontuacao_calculada.toFixed(2) // Pontuação Total (mesmo valor)\n  ]) || [];\n  \n  // Criar tabela\n  autoTable(doc, {\n    startY: 75,\n    head: [[\n      'No.\\nItem',\n      'Id do documento',\n      'Tipo de serviço',\n      'Qtd',\n      'Qtd fiscais',\n      'Pontuação parcial',\n      'Pontuação Total'\n    ]],\n    body: tableData,\n    styles: {\n      fontSize: 8,\n      cellPadding: 2,\n    },\n    headStyles: {\n      fillColor: [240, 240, 240],\n      textColor: [0, 0, 0],\n      fontStyle: 'bold',\n      halign: 'center',\n    },\n    columnStyles: {\n      0: { halign: 'center', cellWidth: 15 }, // No. Item\n      1: { halign: 'center', cellWidth: 25 }, // Id do documento\n      2: { halign: 'left', cellWidth: 60 }, // Tipo de serviço\n      3: { halign: 'center', cellWidth: 15 }, // Qtd\n      4: { halign: 'center', cellWidth: 20 }, // Qtd fiscais\n      5: { halign: 'center', cellWidth: 25 }, // Pontuação parcial\n      6: { halign: 'center', cellWidth: 25 }, // Pontuação Total\n    },\n    alternateRowStyles: {\n      fillColor: [250, 250, 250]\n    }\n  });\n  \n  // Total geral\n  const finalY = (doc as any).lastAutoTable.finalY + 10;\n  doc.setFont('helvetica', 'bold');\n  doc.text(`TOTAL GERAL DE PONTOS: ${registro.total_pontos.toFixed(2)}`, pageWidth - 60, finalY, { align: 'right' });\n  \n  // Observações se existirem\n  if (registro.anotacoes) {\n    doc.setFont('helvetica', 'bold');\n    doc.text('Observações:', 20, finalY + 15);\n    doc.setFont('helvetica', 'normal');\n    \n    // Quebrar texto das observações se for muito longo\n    const splitText = doc.splitTextToSize(registro.anotacoes, pageWidth - 40);\n    doc.text(splitText, 20, finalY + 22);\n  }\n  \n  // Rodapé com data/hora de geração\n  const rodapeY = doc.internal.pageSize.height - 20;\n  doc.setFontSize(8);\n  doc.setFont('helvetica', 'italic');\n  doc.text(\n    `Relatório gerado em ${format(new Date(), 'dd/MM/yyyy HH:mm', { locale: ptBR })}`,\n    pageWidth / 2,\n    rodapeY,\n    { align: 'center' }\n  );\n  \n  // Gerar e fazer download do PDF\n  const fileName = `relatorio_produtividade_${registro.competencia?.replace('/', '_')}_${registro.numero_registro}.pdf`;\n  doc.save(fileName);\n}"
        }
    ]
}