{
    "sourceFile": "src/pages/SetupAdmin.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1757097612561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1757097612561,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { addAdminUser } from '@/utils/addAdminUser';\r\n\r\nexport default function SetupAdmin() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState<{ success: boolean; message: string } | null>(null);\r\n\r\n  const handleCreateAdmin = async () => {\r\n    setLoading(true);\r\n    setResult(null);\r\n    \r\n    try {\r\n      const response = await addAdminUser();\r\n      \r\n      if (response.success) {\r\n        setResult({\r\n          success: true,\r\n          message: 'Usuário administrador criado com sucesso! Email: adm@fiscal.com, Senha: admin123'\r\n        });\r\n      } else {\r\n        setResult({\r\n          success: false,\r\n          message: `Erro: ${response.error}`\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      setResult({\r\n        success: false,\r\n        message: `Erro: ${error.message}`\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-background p-4\">\r\n      <Card className=\"w-full max-w-md\">\r\n        <CardHeader className=\"text-center\">\r\n          <CardTitle className=\"text-2xl font-bold\">Setup Administrador</CardTitle>\r\n          <CardDescription>\r\n            Criar usuário administrador no sistema\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <h3 className=\"font-semibold\">Dados do Administrador:</h3>\r\n            <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n              <li>• Email: adm@fiscal.com</li>\r\n              <li>• Matrícula: 0101</li>\r\n              <li>• Senha: admin123</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <Button \r\n            onClick={handleCreateAdmin} \r\n            disabled={loading}\r\n            className=\"w-full\"\r\n          >\r\n            {loading ? 'Criando usuário...' : 'Criar Usuário Administrador'}\r\n          </Button>\r\n\r\n          {result && (\r\n            <div className={`p-3 rounded-lg text-sm ${\r\n              result.success \r\n                ? 'bg-green-50 text-green-700 border border-green-200' \r\n                : 'bg-red-50 text-red-700 border border-red-200'\r\n            }`}>\r\n              {result.message}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"text-xs text-muted-foreground text-center\">\r\n            <p>Execute esta operação apenas uma vez.</p>\r\n            <p>Após criar o usuário, você pode fazer login com as credenciais acima.</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}